// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: network.proto
// Protobuf C++ Version: 5.28.3

#include "network.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace jokinojo {

inline constexpr ResponseData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usernames_{},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        videoname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chatmessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        datatype_{static_cast< ::jokinojo::ResponseData_DataType >(0)},
        roomid_{0},
        timeposition_{0},
        resumed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseData::ResponseData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDataDefaultTypeInternal() {}
  union {
    ResponseData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDataDefaultTypeInternal _ResponseData_default_instance_;

inline constexpr RequestData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        videoname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chatmessage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        datatype_{static_cast< ::jokinojo::RequestData_DataType >(0)},
        roomid_{0},
        timeposition_{0},
        resumed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RequestData::RequestData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDataDefaultTypeInternal() {}
  union {
    RequestData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDataDefaultTypeInternal _RequestData_default_instance_;
}  // namespace jokinojo
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_network_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_network_2eproto = nullptr;
const ::uint32_t
    TableStruct_network_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.datatype_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.roomid_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.timeposition_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.resumed_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.videoname_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::RequestData, _impl_.chatmessage_),
        ~0u,
        0,
        3,
        4,
        5,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.datatype_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.roomid_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.usernames_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.timeposition_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.resumed_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.videoname_),
        PROTOBUF_FIELD_OFFSET(::jokinojo::ResponseData, _impl_.chatmessage_),
        ~0u,
        3,
        ~0u,
        0,
        4,
        5,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::jokinojo::RequestData)},
        {22, 38, -1, sizeof(::jokinojo::ResponseData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::jokinojo::_RequestData_default_instance_._instance,
    &::jokinojo::_ResponseData_default_instance_._instance,
};
const char descriptor_table_protodef_network_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rnetwork.proto\022\010jokinojo\"\206\003\n\013RequestDat"
    "a\0220\n\010dataType\030\001 \001(\0162\036.jokinojo.RequestDa"
    "ta.DataType\022\025\n\010username\030\002 \001(\tH\000\210\001\001\022\023\n\006ro"
    "omId\030\003 \001(\005H\001\210\001\001\022\031\n\014timePosition\030\004 \001(\005H\002\210"
    "\001\001\022\024\n\007resumed\030\005 \001(\010H\003\210\001\001\022\026\n\tvideoName\030\006 "
    "\001(\tH\004\210\001\001\022\030\n\013chatMessage\030\007 \001(\tH\005\210\001\001\"c\n\010Da"
    "taType\022\017\n\013CREATE_ROOM\020\000\022\r\n\tJOIN_ROOM\020\001\022\010"
    "\n\004QUIT\020\002\022\010\n\004SYNC\020\003\022\016\n\nVIDEO_NAME\020\004\022\t\n\005RE"
    "ADY\020\005\022\010\n\004CHAT\020\006B\013\n\t_usernameB\t\n\007_roomIdB"
    "\017\n\r_timePositionB\n\n\010_resumedB\014\n\n_videoNa"
    "meB\016\n\014_chatMessage\"\240\003\n\014ResponseData\0221\n\010d"
    "ataType\030\001 \001(\0162\037.jokinojo.ResponseData.Da"
    "taType\022\023\n\006roomId\030\002 \001(\005H\000\210\001\001\022\021\n\tusernames"
    "\030\003 \003(\t\022\025\n\010username\030\004 \001(\tH\001\210\001\001\022\031\n\014timePos"
    "ition\030\005 \001(\005H\002\210\001\001\022\024\n\007resumed\030\006 \001(\010H\003\210\001\001\022\026"
    "\n\tvideoName\030\007 \001(\tH\004\210\001\001\022\030\n\013chatMessage\030\010 "
    "\001(\tH\005\210\001\001\"h\n\010DataType\022\017\n\013CREATE_ROOM\020\000\022\r\n"
    "\tJOIN_ROOM\020\001\022\r\n\tUSER_LEFT\020\002\022\010\n\004SYNC\020\003\022\016\n"
    "\nVIDEO_NAME\020\004\022\t\n\005READY\020\005\022\010\n\004CHAT\020\006B\t\n\007_r"
    "oomIdB\013\n\t_usernameB\017\n\r_timePositionB\n\n\010_"
    "resumedB\014\n\n_videoNameB\016\n\014_chatMessageb\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_network_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_network_2eproto = {
    false,
    false,
    845,
    descriptor_table_protodef_network_2eproto,
    "network.proto",
    &descriptor_table_network_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_network_2eproto::offsets,
    file_level_enum_descriptors_network_2eproto,
    file_level_service_descriptors_network_2eproto,
};
namespace jokinojo {
const ::google::protobuf::EnumDescriptor* RequestData_DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_2eproto);
  return file_level_enum_descriptors_network_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t RequestData_DataType_internal_data_[] = {
    458752u, 0u, };
bool RequestData_DataType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr RequestData_DataType RequestData::CREATE_ROOM;
constexpr RequestData_DataType RequestData::JOIN_ROOM;
constexpr RequestData_DataType RequestData::QUIT;
constexpr RequestData_DataType RequestData::SYNC;
constexpr RequestData_DataType RequestData::VIDEO_NAME;
constexpr RequestData_DataType RequestData::READY;
constexpr RequestData_DataType RequestData::CHAT;
constexpr RequestData_DataType RequestData::DataType_MIN;
constexpr RequestData_DataType RequestData::DataType_MAX;
constexpr int RequestData::DataType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ResponseData_DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_network_2eproto);
  return file_level_enum_descriptors_network_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ResponseData_DataType_internal_data_[] = {
    458752u, 0u, };
bool ResponseData_DataType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ResponseData_DataType ResponseData::CREATE_ROOM;
constexpr ResponseData_DataType ResponseData::JOIN_ROOM;
constexpr ResponseData_DataType ResponseData::USER_LEFT;
constexpr ResponseData_DataType ResponseData::SYNC;
constexpr ResponseData_DataType ResponseData::VIDEO_NAME;
constexpr ResponseData_DataType ResponseData::READY;
constexpr ResponseData_DataType ResponseData::CHAT;
constexpr ResponseData_DataType ResponseData::DataType_MIN;
constexpr ResponseData_DataType ResponseData::DataType_MAX;
constexpr int ResponseData::DataType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class RequestData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestData, _impl_._has_bits_);
};

RequestData::RequestData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:jokinojo.RequestData)
}
inline PROTOBUF_NDEBUG_INLINE RequestData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::jokinojo::RequestData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        videoname_(arena, from.videoname_),
        chatmessage_(arena, from.chatmessage_) {}

RequestData::RequestData(
    ::google::protobuf::Arena* arena,
    const RequestData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, datatype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, datatype_),
           offsetof(Impl_, resumed_) -
               offsetof(Impl_, datatype_) +
               sizeof(Impl_::resumed_));

  // @@protoc_insertion_point(copy_constructor:jokinojo.RequestData)
}
inline PROTOBUF_NDEBUG_INLINE RequestData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        videoname_(arena),
        chatmessage_(arena) {}

inline void RequestData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, datatype_),
           0,
           offsetof(Impl_, resumed_) -
               offsetof(Impl_, datatype_) +
               sizeof(Impl_::resumed_));
}
RequestData::~RequestData() {
  // @@protoc_insertion_point(destructor:jokinojo.RequestData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.videoname_.Destroy();
  _impl_.chatmessage_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RequestData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RequestData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RequestData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RequestData>(),
            ::google::protobuf::Message::GetNewImpl<RequestData>(),
            ::google::protobuf::Message::GetClearImpl<RequestData>(), &RequestData::ByteSizeLong,
                &RequestData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RequestData, _impl_._cached_size_),
            false,
        },
        &RequestData::kDescriptorMethods,
        &descriptor_table_network_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RequestData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 57, 2> RequestData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::jokinojo::RequestData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .jokinojo.RequestData.DataType dataType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestData, _impl_.datatype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.datatype_)}},
    // optional string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.username_)}},
    // optional int32 roomId = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestData, _impl_.roomid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.roomid_)}},
    // optional int32 timePosition = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestData, _impl_.timeposition_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.timeposition_)}},
    // optional bool resumed = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestData, _impl_.resumed_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.resumed_)}},
    // optional string videoName = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.videoname_)}},
    // optional string chatMessage = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(RequestData, _impl_.chatmessage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .jokinojo.RequestData.DataType dataType = 1;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.datatype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string username = 2;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 roomId = 3;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.roomid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 timePosition = 4;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.timeposition_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool resumed = 5;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.resumed_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string videoName = 6;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.videoname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string chatMessage = 7;
    {PROTOBUF_FIELD_OFFSET(RequestData, _impl_.chatmessage_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\10\0\0\0\11\13"
    "jokinojo.RequestData"
    "username"
    "videoName"
    "chatMessage"
  }},
};

PROTOBUF_NOINLINE void RequestData::Clear() {
// @@protoc_insertion_point(message_clear_start:jokinojo.RequestData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.videoname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.chatmessage_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.datatype_ = 0;
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.roomid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.resumed_) -
        reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.resumed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestData& this_ = static_cast<const RequestData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:jokinojo.RequestData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .jokinojo.RequestData.DataType dataType = 1;
          if (this_._internal_datatype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_datatype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string username = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.RequestData.username");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional int32 roomId = 3;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_roomid(), target);
          }

          // optional int32 timePosition = 4;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_timeposition(), target);
          }

          // optional bool resumed = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_resumed(), target);
          }

          // optional string videoName = 6;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_videoname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.RequestData.videoName");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // optional string chatMessage = 7;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_chatmessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.RequestData.chatMessage");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:jokinojo.RequestData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestData::ByteSizeLong(const MessageLite& base) {
          const RequestData& this_ = static_cast<const RequestData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestData::ByteSizeLong() const {
          const RequestData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:jokinojo.RequestData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string username = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // optional string videoName = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_videoname());
            }
            // optional string chatMessage = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chatmessage());
            }
          }
           {
            // .jokinojo.RequestData.DataType dataType = 1;
            if (this_._internal_datatype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_datatype());
            }
          }
          if (cached_has_bits & 0x00000038u) {
            // optional int32 roomId = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
            // optional int32 timePosition = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_timeposition());
            }
            // optional bool resumed = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestData*>(&to_msg);
  auto& from = static_cast<const RequestData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jokinojo.RequestData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_videoname(from._internal_videoname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_chatmessage(from._internal_chatmessage());
    }
  }
  if (from._internal_datatype() != 0) {
    _this->_impl_.datatype_ = from._impl_.datatype_;
  }
  if (cached_has_bits & 0x00000038u) {
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.roomid_ = from._impl_.roomid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.timeposition_ = from._impl_.timeposition_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.resumed_ = from._impl_.resumed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestData::CopyFrom(const RequestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jokinojo.RequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestData::InternalSwap(RequestData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.videoname_, &other->_impl_.videoname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chatmessage_, &other->_impl_.chatmessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestData, _impl_.resumed_)
      + sizeof(RequestData::_impl_.resumed_)
      - PROTOBUF_FIELD_OFFSET(RequestData, _impl_.datatype_)>(
          reinterpret_cast<char*>(&_impl_.datatype_),
          reinterpret_cast<char*>(&other->_impl_.datatype_));
}

::google::protobuf::Metadata RequestData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResponseData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseData, _impl_._has_bits_);
};

ResponseData::ResponseData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:jokinojo.ResponseData)
}
inline PROTOBUF_NDEBUG_INLINE ResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::jokinojo::ResponseData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        usernames_{visibility, arena, from.usernames_},
        username_(arena, from.username_),
        videoname_(arena, from.videoname_),
        chatmessage_(arena, from.chatmessage_) {}

ResponseData::ResponseData(
    ::google::protobuf::Arena* arena,
    const ResponseData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, datatype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, datatype_),
           offsetof(Impl_, resumed_) -
               offsetof(Impl_, datatype_) +
               sizeof(Impl_::resumed_));

  // @@protoc_insertion_point(copy_constructor:jokinojo.ResponseData)
}
inline PROTOBUF_NDEBUG_INLINE ResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        usernames_{visibility, arena},
        username_(arena),
        videoname_(arena),
        chatmessage_(arena) {}

inline void ResponseData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, datatype_),
           0,
           offsetof(Impl_, resumed_) -
               offsetof(Impl_, datatype_) +
               sizeof(Impl_::resumed_));
}
ResponseData::~ResponseData() {
  // @@protoc_insertion_point(destructor:jokinojo.ResponseData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResponseData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.videoname_.Destroy();
  _impl_.chatmessage_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ResponseData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ResponseData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ResponseData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ResponseData>(),
            ::google::protobuf::Message::GetNewImpl<ResponseData>(),
            ::google::protobuf::Message::GetClearImpl<ResponseData>(), &ResponseData::ByteSizeLong,
                &ResponseData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ResponseData, _impl_._cached_size_),
            false,
        },
        &ResponseData::kDescriptorMethods,
        &descriptor_table_network_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ResponseData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 75, 2> ResponseData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseData, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::jokinojo::ResponseData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string chatMessage = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.chatmessage_)}},
    // .jokinojo.ResponseData.DataType dataType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseData, _impl_.datatype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.datatype_)}},
    // optional int32 roomId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseData, _impl_.roomid_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.roomid_)}},
    // repeated string usernames = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.usernames_)}},
    // optional string username = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.username_)}},
    // optional int32 timePosition = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseData, _impl_.timeposition_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.timeposition_)}},
    // optional bool resumed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ResponseData, _impl_.resumed_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.resumed_)}},
    // optional string videoName = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.videoname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .jokinojo.ResponseData.DataType dataType = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.datatype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional int32 roomId = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.roomid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated string usernames = 3;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.usernames_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional string username = 4;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 timePosition = 5;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.timeposition_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool resumed = 6;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.resumed_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string videoName = 7;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.videoname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string chatMessage = 8;
    {PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.chatmessage_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\0\11\10\0\0\11\13\0\0\0\0\0\0\0"
    "jokinojo.ResponseData"
    "usernames"
    "username"
    "videoName"
    "chatMessage"
  }},
};

PROTOBUF_NOINLINE void ResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:jokinojo.ResponseData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usernames_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.videoname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.chatmessage_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.datatype_ = 0;
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.roomid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.resumed_) -
        reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.resumed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseData& this_ = static_cast<const ResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:jokinojo.ResponseData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .jokinojo.ResponseData.DataType dataType = 1;
          if (this_._internal_datatype() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_datatype(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 roomId = 2;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_roomid(), target);
          }

          // repeated string usernames = 3;
          for (int i = 0, n = this_._internal_usernames_size(); i < n; ++i) {
            const auto& s = this_._internal_usernames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.ResponseData.usernames");
            target = stream->WriteString(3, s, target);
          }

          // optional string username = 4;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.ResponseData.username");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional int32 timePosition = 5;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_timeposition(), target);
          }

          // optional bool resumed = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_resumed(), target);
          }

          // optional string videoName = 7;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_videoname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.ResponseData.videoName");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional string chatMessage = 8;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_chatmessage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "jokinojo.ResponseData.chatMessage");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:jokinojo.ResponseData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseData::ByteSizeLong(const MessageLite& base) {
          const ResponseData& this_ = static_cast<const ResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseData::ByteSizeLong() const {
          const ResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:jokinojo.ResponseData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string usernames = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_usernames().size());
              for (int i = 0, n = this_._internal_usernames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_usernames().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string username = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // optional string videoName = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_videoname());
            }
            // optional string chatMessage = 8;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chatmessage());
            }
          }
           {
            // .jokinojo.ResponseData.DataType dataType = 1;
            if (this_._internal_datatype() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_datatype());
            }
          }
          if (cached_has_bits & 0x00000038u) {
            // optional int32 roomId = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_roomid());
            }
            // optional int32 timePosition = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_timeposition());
            }
            // optional bool resumed = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseData*>(&to_msg);
  auto& from = static_cast<const ResponseData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:jokinojo.ResponseData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_usernames()->MergeFrom(from._internal_usernames());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_videoname(from._internal_videoname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_chatmessage(from._internal_chatmessage());
    }
  }
  if (from._internal_datatype() != 0) {
    _this->_impl_.datatype_ = from._impl_.datatype_;
  }
  if (cached_has_bits & 0x00000038u) {
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.roomid_ = from._impl_.roomid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.timeposition_ = from._impl_.timeposition_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.resumed_ = from._impl_.resumed_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseData::CopyFrom(const ResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jokinojo.ResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseData::InternalSwap(ResponseData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.usernames_.InternalSwap(&other->_impl_.usernames_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.videoname_, &other->_impl_.videoname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chatmessage_, &other->_impl_.chatmessage_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.resumed_)
      + sizeof(ResponseData::_impl_.resumed_)
      - PROTOBUF_FIELD_OFFSET(ResponseData, _impl_.datatype_)>(
          reinterpret_cast<char*>(&_impl_.datatype_),
          reinterpret_cast<char*>(&other->_impl_.datatype_));
}

::google::protobuf::Metadata ResponseData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace jokinojo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_network_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
